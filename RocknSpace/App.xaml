<Application x:Class="RocknSpace.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RocknSpace"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
             StartupUri="AppWindow.xaml">
    <Application.Resources>
        <local:DivideBy2Converter x:Key="DivideBy2Converter"/>
        <local:SizeToRotatedRectConverter x:Key="SizeToRotatedRectConverter"/>

        <SolidColorBrush x:Key="MenuOutline" Color="#7F1EA9EA"/>
        <SolidColorBrush x:Key="MenuBg" Color="#19FFFFFF"/>
        <SolidColorBrush x:Key="TransparentBrush" Color="#00FFFFFF"/>
        
        <Style x:Key="Aurora">
            <Setter Property="TextElement.FontFamily" Value="/RocknSpace;component/Fonts/#aurora" />
        </Style>

        <Style x:Key="OuterLimits">
            <Setter Property="TextElement.FontFamily" Value="/RocknSpace;component/Fonts/#SF Outer Limits Distorted" />
        </Style>

        <Style x:Key="MenuScreen" TargetType="{x:Type UserControl}">
            <Setter Property="Width" Value="1000" />
            <Setter Property="Height" Value="700" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Visibility" Value="Hidden" />
        </Style>

        <Style x:Key="MenuTitle" BasedOn="{StaticResource OuterLimits}" TargetType="{x:Type Label}">
            <Setter Property="TextElement.FontSize" Value="55"/>
            <Setter Property="TextElement.Foreground" Value="White" />
            <Setter Property="Margin" Value="0,60,0,0" />
        </Style>
        
        <Style x:Key="MenuLabel" BasedOn="{StaticResource Aurora}" TargetType="{x:Type Label}">
            <Setter Property="TextElement.FontSize" Value="30" />
            <Setter Property="TextElement.Foreground" Value="White" />
        </Style>

        <Style x:Key="MenuButton" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="TextElement.FontSize" Value="35" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
                            <MediaElement Name="audio" Volume="{Binding Source={x:Static local:Profiles.Instance}, Path=Current.Sound}" />
                            <Label x:Name="Text" Content="{TemplateBinding Content}" Style="{StaticResource MenuLabel}" FontSize="{TemplateBinding FontSize}" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="FocusManager.FocusedElement" Value="{Binding RelativeSource={RelativeSource Self}}" />
                            </Trigger>
                            <Trigger Property="IsFocused" Value="True">
                                <Setter Property="Foreground" TargetName="Text" Value="Aquamarine" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Foreground" TargetName="Text" Value="DarkGray" />
                            </Trigger>
                            <EventTrigger RoutedEvent="PreviewMouseDown">
                                <EventTrigger.Actions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <MediaTimeline Source="Sounds/click.wav" Storyboard.TargetName="audio" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger.Actions>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MenuBackground" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Grid>
                            <Canvas x:Name="BigRect" Background="{StaticResource MenuOutline}">
                                <Canvas.Clip>
                                    <RectangleGeometry>
                                        <RectangleGeometry.Rect>
                                            <MultiBinding Converter="{StaticResource SizeToRotatedRectConverter}" ConverterParameter="35">
                                                <Binding ElementName="BigRect" Path="ActualWidth" />
                                                <Binding ElementName="BigRect" Path="ActualHeight" />
                                            </MultiBinding>
                                        </RectangleGeometry.Rect>
                                        <RectangleGeometry.Transform>
                                            <RotateTransform Angle="45" CenterX="{Binding ActualWidth, ElementName=BigRect, Converter={StaticResource DivideBy2Converter}}" CenterY="{Binding ActualHeight, ElementName=BigRect, Converter={StaticResource DivideBy2Converter}}"/>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Canvas.Clip>
                            </Canvas>
                            <Canvas x:Name="SmallRect" Background="{StaticResource MenuBg}" Margin="10,10,10,10">
                                <Canvas.Clip>
                                    <RectangleGeometry>
                                        <RectangleGeometry.Rect>
                                            <MultiBinding Converter="{StaticResource SizeToRotatedRectConverter}" ConverterParameter="35">
                                                <Binding ElementName="SmallRect" Path="ActualWidth" />
                                                <Binding ElementName="SmallRect" Path="ActualHeight" />
                                            </MultiBinding>
                                        </RectangleGeometry.Rect>
                                        <RectangleGeometry.Transform>
                                            <RotateTransform Angle="45" CenterX="{Binding ActualWidth, ElementName=SmallRect, Converter={StaticResource DivideBy2Converter}}" CenterY="{Binding ActualHeight, ElementName=SmallRect, Converter={StaticResource DivideBy2Converter}}"/>
                                        </RectangleGeometry.Transform>
                                    </RectangleGeometry>
                                </Canvas.Clip>
                            </Canvas>
                            <ContentPresenter HorizontalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="5" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" >
                            <Border.Background>
                                <SolidColorBrush Color="#FF33A8EC" />
                            </Border.Background>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid Width="10">
                <Track Name="PART_Track" IsDirectionReversed="true">
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0"  Background="{StaticResource MenuBg}" BorderBrush="{StaticResource MenuOutline}" />
                    </Track.Thumb>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="MenuScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <ScrollContentPresenter Grid.Column="1"/>

                            <ScrollBar Template="{StaticResource VerticalScrollBar}" Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}"  ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Color x:Key="DisabledControlLightColor">#00E8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>

        <SolidColorBrush x:Key="ControlLightBrush" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="BorderMediumBrush" Color="#00FF00FF"/>
        <Style x:Key="MenuTextbox" TargetType="{x:Type TextBox}">
            <Setter Property="TextElement.FontFamily" Value="/RocknSpace;component/Fonts/#aurora" />
            <Setter Property="TextElement.FontSize" Value="30" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="MinWidth" Value="120" />
            <Setter Property="MinHeight" Value="20" />
            
            <Setter Property="AllowDrop" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBoxBase}">
                        <Border Name="Border" CornerRadius="2" Padding="2" BorderThickness="1" Background="{StaticResource ControlLightBrush}" BorderBrush="{StaticResource BorderMediumBrush}">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlLightColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="ReadOnly">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="MouseOver" />
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButtonRight" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="White"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderRepeatButtonLeft" TargetType="RepeatButton">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="RepeatButton">
                        <Border Background="{StaticResource MenuOutline}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="SliderThumb" TargetType="Thumb">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Thumb">
                        <Grid>
                            <Border Height="21" Width="10" Background="{StaticResource MenuOutline}"/>
                            <Border Height="21" Width="10" Background="White"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="Slider" TargetType="Slider">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Track Grid.Row="1" x:Name="PART_Track"   >
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButtonLeft}"  Command="Slider.DecreaseLarge" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource SliderThumb}"  />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource SliderRepeatButtonRight}" Command="Slider.IncreaseLarge" />
                    </Track.IncreaseRepeatButton>
                </Track>
            </Grid>
        </ControlTemplate>

        <Style x:Key="Horizontal_Slider" TargetType="Slider">
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="SmallChange" Value="0.01"/>
            <Setter Property="LargeChange" Value="0.1" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="MinHeight" Value="21" />
                    <Setter Property="MinWidth" Value="104" />
                    <Setter Property="Template" Value="{StaticResource Slider}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Application.Resources>
</Application>
